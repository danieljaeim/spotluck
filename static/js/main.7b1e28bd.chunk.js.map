{"version":3,"sources":["Components/Thumbnail.js","Components/ChosenPreferences.js","Components/Success.js","Components/CurrentTrack.js","Components/Navbar.js","Components/Landing.js","Components/Agreement.js","Components/App.js","serviceWorker.js","index.js"],"names":["colorfilter","Thumbnail","this","props","tracks","newartisttracks","sortByNew","token","updateSortByNew","queueUpSongs","updateMenu","callForRecommend","playSpecificSong","updateHoveredObj","lockSpecificTrack","select","chosentracks","hoverIndex","className","map","track","i","key","data-sample-uri","preview_url","onMouseLeave","e","onMouseEnter","onClick","uri","name","alt","src","album","images","url","style","borderTop","indexOf","slice","artists","Array","Math","ceil","popularity","toFixed","fill","tile","backgroundColor","class","aria-hidden","_","Component","ChosenPreferences","updateSearchTerm","searchTerm","target","value","setState","currentSearchTerm","clearTimeout","state","timer","setTimerToCallApi","setTimeout","a","searchForSpecificQuery","searchString","encodeURIComponent","axios","get","headers","response","data","items","filter","artist","sort","b","seenAlbums","albums","ret","album_type","lengthOfArtistsFound","length","showSearchModal","alreadyMoved","width","height","endChosenModal","openedSearch","showingData","swappingArtistHover","arrows","nextArrow","prevArrow","preferences","changingPreferenceIndex","playSpecificArtist","updatePreference","setupPreference","currentRelatedArtists","openingMenu","atLeastOne","paddingTop","color","top","num","id","left","background","animationDelay","abs","backgroundImage","type","onChange","preventDefault","onFocus","placeholder","document","getElementById","onMouseOver","Success","componentDidMount","callSpotifyApi","limit","playlistids","pl","count","playlist_res","added_at","0","1","2","3","4","relatedArtists","copyTracks","forEach","val","push","selectArr","tracksLeft","seedBase","seedArtist","seedTrack","changed","recRequestURL","seed_response","artistNames","some","t","localeCompare","sortByNewTracks","tracklisturi","updateSelectedTrack","selectedTrack","updateSearchSeed","seedStr","searchSeed","index","objData","sample_uri","currentTarget","dataset","sampleUri","img","children","currentSrc","trackName","textContent","artistName","hovering","updateTimeRange","time_range","updateHoverUri","preferenceObject","indexToReplace","st","put","currentPlaying","songname","selectCopy","recSeed","thumbnailOn","itemToSwap","clickToSelect","showThumb","deviceId","changePlayerSettings","zIndex","CurrentTrack","millisToMinutesAndSeconds","millis","minutes","floor","seconds","changeCurrentTrackTime","changeCurrentVolume","pauseTimer","restartTimer","curTrack","curVolume","playing","trackTimer","track_window","current_track","min","max","duration","step","Navbar","Landing","search","window","location","hash","queryString","parse","access_token","validateLogin","readyToRedirect","to","Agreement","scopes","href","App","checkPlayerInterval","loggedIn","playerCheckInterval","setInterval","checkForPlayer","Spotify","clearInterval","player","Player","getOAuthToken","cb","volume","on","console","error","log","newSong","device_id","setVolume","premium","transferPlaybackHere","connect","then","success","control","pause","togglePlay","nextTrack","previousTrack","currentTimer","startTimer","start","time","seek","getPlayerState","getCurrentState","validateLogIn","validated","position","redirect","fetch","method","authorization","body","JSON","stringify","exact","path","render","React","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7b1e28bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../css/Success.css';\r\nimport '../css/Thumbnail.css';\r\n\r\nconst colorfilter = ['330036', '38182F', '330036', '8D0101', 'FE0B0B', 'FCA122', 'FDCC86'];\r\n\r\nexport default class Thumbnail extends Component {\r\n\r\n    render() {\r\n        const { tracks, newartisttracks, token, sortByNew, updateSortByNew, queueUpSongs, updateMenu,\r\n            callForRecommend, playSpecificSong, updateHoveredObj, lockSpecificTrack, select, hoverIndex } = this.props;\r\n\r\n        let chosentracks = sortByNew ? newartisttracks : tracks;\r\n\r\n        return (\r\n            <span className=\"thumbnail-container\">\r\n                {/* <span className=\"thumbnail-filter\">\r\n                    <span className=\"filter-by-title\">\r\n                        <span className=\"filter-title-text\">\r\n                            Title\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"filter-by-artist\">\r\n                        <span className='filter-artist-text'>\r\n                            Artist\r\n                        </span>\r\n                    </span>\r\n                    <span className=\"filter-by-sort\">\r\n                        <span className='filter-sort-text'>\r\n                            Popularity\r\n                        </span>\r\n                    </span>\r\n                </span> */}\r\n                <div className=\"tracklist\">\r\n                    {chosentracks ? chosentracks.map((track, i) =>\r\n                        <div className='track-style'\r\n                            key={i}\r\n                            data-sample-uri={track.preview_url}\r\n                            onMouseLeave={e => updateHoveredObj(null)}\r\n                            onMouseEnter={e => updateHoveredObj(e, i)}\r\n                        >\r\n                            {/* <span className=\"track_number\"> {i + 1}. </span> */}\r\n                            <div className=\"name_artist_container\">\r\n                                <div className=\"img-hover\" onClick={() => playSpecificSong(track.uri, track.name)}>\r\n                                    <div className=\"play-circle\" />\r\n                                </div>\r\n                                <img className='imageStyle'\r\n                                    onClick={() => playSpecificSong(track.uri, track.name)}\r\n                                    alt=\"\"\r\n                                    src={`${track.album.images[2].url}`}\r\n                                />\r\n                                <span className=\"underline-area\"\r\n                                    style={{ borderTop: i > 0 ? (select[i - 1]) ? '1px #E36588 solid' : '1px #82A6B1 solid' : 'none' }}\r\n                                >\r\n                                    <h4 className='track_name'>\r\n                                        {track.name.indexOf('(') === -1 ? track.name : track.name.slice(0, track.name.indexOf('('))} </h4>\r\n                                    <span className=\"artist_name\">\r\n                                        {track.artists[0].name}\r\n                                    </span>\r\n                                    <span className=\"track-popularity\">\r\n                                        {new Array(Math.ceil((track.popularity / 10).toFixed(2))).fill(0).map((tile, i) =>\r\n                                            <span className=\"fill-up-popularity\" style={{ backgroundColor: '#' + colorfilter[i] }} />\r\n                                        )}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <span className=\"bookmark-button\"\r\n                                onClick={() => lockSpecificTrack(i)}>\r\n                                {select[i] ? <i class=\"fa lock-button fa-lock fa-2x\" aria-hidden=\"true\"></i> : null}\r\n                                {!select[i] ? <i class=\"fa lock-button fa-unlock fa-2x\" aria-hidden=\"true\"></i> : null}\r\n                            </span>\r\n                        </div>) : null}\r\n                </div>\r\n                <div className=\"tracks-edit\">\r\n                    <div className=\"add-playlist-button\">\r\n                    </div>\r\n                    <div className=\"refresh-tracks-button\"\r\n                        onClick={_ => callForRecommend()}>\r\n                        <div class=\"refresh\" aria-hidden=\"true\" />\r\n                    </div>\r\n                    <div className=\"play-playlist-button\"\r\n                        onClick={_ => queueUpSongs()}>\r\n                        <div class=\"play-circle-o\" aria-hidden=\"true\" />\r\n                    </div>\r\n                    <div className=\"return-button\"\r\n                        onClick={_ => queueUpSongs()}>\r\n                        <div class=\"return\" onClick={ _ => updateMenu() } aria-hidden=\"true\" />\r\n                    </div>\r\n                    <div className=\"edit-settings\">\r\n                        <span className=\"check-new-artists\">\r\n                            <div className=\"new-artist\"\r\n                                onClick={_ => updateSortByNew()}>\r\n                                {sortByNew ?\r\n                                    <div className=\"check-square\" aria-hidden=\"true\" /> :\r\n                                    <div className=\"times-circle\" aria-hidden=\"true\" />\r\n                                }\r\n                            </div>\r\n                            <span className=\"new-artist-label\"> Prioritize new artists </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {/* {hovering ? <InfoScreen changePlayerSettings={changePlayerSettings} deviceId={deviceId} hovering={hovering} /> : null} */}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/ChosenPreferences.css';\r\n\r\nexport default class ChosenPreferences extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showSearchModal: false,\r\n            currentSearchTerm: '',\r\n            alreadyMoved: false,\r\n            timer: null,\r\n            data: null,\r\n            width: 0,\r\n            height: 0,\r\n            endChosenModal: false,\r\n            openedSearch: false,\r\n            lengthOfArtistsFound: 20,\r\n            showingData: false,\r\n            swappingArtistHover: false,\r\n            arrows: true,\r\n            nextArrow: null,\r\n            prevArrow: null\r\n        }\r\n    }\r\n\r\n    updateSearchTerm = (e) => {\r\n        let searchTerm = e.target.value;\r\n        this.setState({ currentSearchTerm: searchTerm });\r\n        clearTimeout(this.state.timer);\r\n\r\n        if (searchTerm === '' || searchTerm === this.state.currentSearchTerm) return;\r\n        let timer = this.setTimerToCallApi();\r\n        this.setState({ timer });\r\n    }\r\n\r\n    setTimerToCallApi = () => {\r\n        let timer = setTimeout(async () => {\r\n            let { currentSearchTerm } = this.state;\r\n            await this.searchForSpecificQuery(currentSearchTerm);\r\n        }, 1000);\r\n\r\n        return timer;\r\n    }\r\n\r\n    searchForSpecificQuery = async (searchString) => {\r\n        searchString = encodeURIComponent(searchString);\r\n        let response = await axios.get(`https://api.spotify.com/v1/search?q=${searchString}&type=artist,track,album`,\r\n            {\r\n                headers: {\r\n                    'Authorization': \"Bearer \" + this.props.token,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n        let data = response.data;\r\n        if (data.artists) {\r\n            data.artists.items.filter(artist => artist.images[0])\r\n            data.artists.items.sort((a, b) => b.popularity - a.popularity);\r\n        }\r\n\r\n        let seenAlbums = {};\r\n        if (data.albums) {\r\n            let ret = data.albums.items.filter(album => {\r\n                if (album.album_type === \"single\") return false;\r\n                if (seenAlbums[album.name]) return false;\r\n                seenAlbums[album.name] = true;\r\n                return true;\r\n            });\r\n            data.albums.items = ret;\r\n        }\r\n\r\n        this.setState({ data, lengthOfArtistsFound: data.artists.items.length });\r\n    }\r\n\r\n\r\n    render() {\r\n        let { preferences, changingPreferenceIndex, playSpecificArtist,\r\n            updateMenu, updatePreference, setupPreference, currentRelatedArtists, openingMenu } = this.props;\r\n        let { data, lengthOfArtistsFound, showingData } = this.state;\r\n\r\n        let atLeastOne = preferences[0] || preferences[1] ||\r\n            preferences[2] || preferences[3] || preferences[4];\r\n\r\n\r\n        return (\r\n            <div className=\"chosen-container\">\r\n                <div className=\"info-div\" style={{ paddingTop: changingPreferenceIndex ? 'none' : '60px' }}>\r\n                    {\r\n                        changingPreferenceIndex == null ?\r\n                            <>\r\n                                <span className=\"info-span\"> Here are some artists you enjoy.\r\n                                    <span className=\"spotify-text\"> </span> <br />\r\n                                    <span> <span style={{ color: '#E36588' }}> Click </span>\r\n                                        and <span style={{ color: 'sandybrown' }}> swap </span>\r\n                                        out artists.\r\n                                    </span>\r\n                                </span>\r\n                            </> : null\r\n                    }\r\n                </div>\r\n                <div className=\"artist-image-list\"\r\n                    style={{\r\n                        top: changingPreferenceIndex !== null ? '-5vh' : '30vh'\r\n                    }}>\r\n                    {atLeastOne ? [0, 1, 2, 3, 4].map((num, i) =>\r\n                        <span\r\n                            key={preferences[i].data.id}\r\n                            className={`artist-box-container \r\n                            ${changingPreferenceIndex === num && this.props.openingMenu ? 'move-into-place-anim' : 'move-out-of-way-anim'}`}\r\n                            style={{\r\n                                left: `${-3 + 24 * i}%`, background: changingPreferenceIndex !== null ? 'linear-gradient(90deg, rgba(255,184,92,1) 0%, rgba(227,101,136,1) 75%)' : '',\r\n                                animationDelay: changingPreferenceIndex === null ? Math.abs(2 - i) * 325 + 'ms' : null\r\n                            }}>\r\n                            {preferences[num] ?\r\n                                <span\r\n                                    key={preferences[num].name}\r\n                                    onClick={(e) => setupPreference(num)}>\r\n                                    {this.state.swappingArtistHover && num === changingPreferenceIndex ?\r\n                                        <div class=\"arrow-circle-down\" aria-hidden=\"true\" /> : null}\r\n                                    <img className=\"artist-image-ins\"\r\n                                        style={{ backgroundImage: 'cover' }}\r\n                                        src={preferences[num].type === 'artist' ?\r\n                                            preferences[num].data.images[2].url :\r\n                                            preferences[num].data.album.images[2].url}\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <span className=\"artist-image-name\"\r\n                                        style={{ top: changingPreferenceIndex === num ? '120%' : '' }}\r\n                                    > {preferences[num].data.name} </span>\r\n                                </span > :\r\n                                <i className=\"fa fa-plus-square fa-5x\" aria-hidden=\"true\"></i>\r\n                            }\r\n                        </span>) : null}\r\n                </div>\r\n                {currentRelatedArtists !== null ?\r\n                    <div className=\"related-search-container\">\r\n                        <div className=\"search-modal\">\r\n                            <div className=\"intro-search-modal\">\r\n                                <div className=\"add-button-intro\">\r\n                                </div>\r\n                                <input\r\n                                    onChange={e => { e.preventDefault(); this.updateSearchTerm(e) }}\r\n                                    onFocus={e => { e.preventDefault(); this.setState({ showingData: true }) }}\r\n                                    className=\"add-text-intro\"\r\n                                    id=\"input-text\"\r\n                                    value={this.state.currentSearchTerm}\r\n                                    placeholder={`Search for an artist`}>\r\n                                </input>\r\n                                {this.state.showingData && this.state.currentSearchTerm ?\r\n                                    <div className=\"cancel-times\"\r\n                                        onClick={e => { \r\n                                            e.preventDefault(); document.getElementById('input-text').value = \"\"; \r\n                                            this.setState({ showingData: false, \r\n                                            currentSearchTerm: '', data: null }) }} />\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                            <div className=\"search-button-modal\">\r\n                                <div className={`generate-button ${changingPreferenceIndex !== null ? 'move-button-down-anim' : ''}`}\r\n                                    onClick={() => updateMenu() }>\r\n                                    Generate Playlist\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"related-artist-modal\">\r\n                            <>\r\n                                {data === null || !showingData ?\r\n                                    currentRelatedArtists.map((artist, i) =>\r\n                                        <div key={artist.id}\r\n                                            className=\"related-artist\">\r\n                                            <div\r\n                                                className=\"replace-div\">\r\n                                                <span className=\"swap-side\"\r\n                                                    onMouseOver={_ => { this.setState({ swappingArtistHover: true }) }}\r\n                                                    onMouseLeave={_ => { this.setState({ swappingArtistHover: false }) }}\r\n                                                    onClick={(e) => { e.preventDefault(); updatePreference(artist, 'artist') }}>\r\n                                                    <div className=\"arrow-circle-up\"\r\n                                                        onClick={(e) => { e.preventDefault(); updatePreference(artist, 'artist') }}\r\n                                                        aria-hidden=\"true\" />\r\n                                                </span>\r\n                                                <span className=\"play-side\" onClick={(e) => { e.preventDefault(); playSpecificArtist(artist.uri, artist.name) }}>\r\n                                                    <div className=\"play-inner\"\r\n                                                        onClick={(e) => { e.preventDefault(); playSpecificArtist(artist.uri, artist.name) }}\r\n                                                        aria-hidden=\"true\" />\r\n                                                </span>\r\n                                            </div>\r\n                                            <img className=\"related-artist-img\" src={artist.images[2].url} alt=\"\" />\r\n                                            <div className=\"related-artist-name\">\r\n                                                {artist.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    ) :\r\n                                    data.artists.items.map((artist, i) => {\r\n                                        if (artist.images[0]) {\r\n                                            return (\r\n                                                <div key={artist.id}\r\n                                                    className=\"related-artist\">\r\n                                                    <div\r\n                                                        onMouseOver={_ => { this.setState({ swappingArtistHover: true }) }}\r\n                                                        onMouseLeave={_ => { this.setState({ swappingArtistHover: false }) }}\r\n                                                        className=\"replace-div\">\r\n                                                        <span className=\"swap-side\"\r\n                                                            onClick={(e) => { e.preventDefault(); updatePreference(artist, 'artist') }}>\r\n                                                            <div className=\"arrow-circle-up\"\r\n                                                                onClick={(e) => { e.preventDefault(); updatePreference(artist, 'artist') }}\r\n                                                                aria-hidden=\"true\" />\r\n                                                        </span>\r\n                                                        <span className=\"play-side\"\r\n                                                            onClick={(e) => { e.preventDefault(); playSpecificArtist(artist.uri, artist.name) }}>\r\n                                                            <div className=\"play-inner\" style={{ color: 'white' }}\r\n                                                                onClick={(e) => { e.preventDefault(); playSpecificArtist(artist.uri, artist.name) }}\r\n                                                                aria-hidden=\"true\" />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <img className=\"related-artist-img\" src={artist.images[0].url} alt=\"\">\r\n                                                    </img>\r\n                                                    <div className=\"related-artist-name\">\r\n                                                        {artist.name}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        return null;\r\n                                    })\r\n                                }\r\n                            </>\r\n                        </div>\r\n                    </div> : null}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport '../css/Success.css';\r\nimport Thumbnail from '../Components/Thumbnail';\r\nimport ChosenPreferences from '../Components/ChosenPreferences';\r\n\r\nconst SEED_URI = \"https://api.spotify.com/v1/recommendations?\";\r\n\r\nexport default class Success extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: 'artists',\r\n            time_range: 'short_term',\r\n            limit: 5,\r\n            select: new Array(50).fill(false),\r\n            artists: null,\r\n            tracks: null,\r\n            newartisttracks: null,\r\n            recSeed: null,\r\n            thumbnailOn: true,\r\n            selectedTrack: null,\r\n            searchSeed: '',\r\n            hovering: null,\r\n            hoverIndex: null,\r\n            changingPreferenceIndex: null,\r\n            itemToSwap: null,\r\n            clickToSelect: false,\r\n            openingMenu: true,\r\n            showThumb: false,\r\n            currentRelatedArtists: null,\r\n            sortByNew: false,\r\n            tracklisturi: [],\r\n            preferences: {\r\n                0: null,\r\n                1: null,\r\n                2: null,\r\n                3: null,\r\n                4: null\r\n            },\r\n            relatedArtists: {\r\n                0: null,\r\n                1: null,\r\n                2: null,\r\n                3: null,\r\n                4: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        setTimeout(async () => {\r\n            await this.callSpotifyApi();\r\n        }, 50);\r\n    }\r\n\r\n    // let's just assume this only gets called when Success first mounts\r\n    callSpotifyApi = async () => {\r\n        const { limit } = this.state;\r\n\r\n        let preferences = {};\r\n\r\n        let response = await axios.get(`https://api.spotify.com/v1/me/top/artists?time_range=short_term&limit=${limit}&offset=0`, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        let artists = response.data.items;\r\n\r\n        if (artists.length !== 5) {\r\n            response = await axios.get(`https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=5&offset=0`, {\r\n                headers: {\r\n                    'Authorization': \"Bearer \" + this.props.token,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            artists = response.data.items;\r\n        }\r\n\r\n        if (artists.length !== 5) {\r\n            response = await axios.get(`https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=5&offset=0`, {\r\n                headers: {\r\n                    'Authorization': \"Bearer \" + this.props.token,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            artists = response.data.items;\r\n        }\r\n\r\n        if (artists.length !== 5) {\r\n            response = await axios.get('https://api.spotify.com/v1/me/playlists', {\r\n                headers: {\r\n                    'Authorization': \"Bearer \" + this.props.token,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            const playlistids = response.data.items.map(pl => pl.id);\r\n            let count = 0;\r\n            for (let id of playlistids) {\r\n                if (count >= 4) break;\r\n                const playlist_res = await axios.get(`https://api.spotify.com/v1/playlists/${id}/tracks`, {\r\n                    headers: {\r\n                        'Authorization': \"Bearer \" + this.props.token,\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n\r\n                let data = playlist_res.data.items;\r\n                data.sort((a, b) => b.added_at - a.added_at)\r\n                for (let track of data) {\r\n                    if (count > 4) break;\r\n                    preferences[count] = { data: track.track, type: 'track' }\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            preferences = {\r\n                0: { data: artists[0], type: 'track' },\r\n                1: { data: artists[1], type: 'track' },\r\n                2: { data: artists[2], type: 'track' },\r\n                3: { data: artists[3], type: 'track' },\r\n                4: { data: artists[4], type: 'track' },\r\n            }\r\n\r\n            this.setState({ artists, preferences });\r\n            await this.callForRecommend();\r\n            return;\r\n        }\r\n\r\n        preferences = {\r\n            0: { data: artists[0], type: 'artist' },\r\n            1: { data: artists[1], type: 'artist' },\r\n            2: { data: artists[2], type: 'artist' },\r\n            3: { data: artists[3], type: 'artist' },\r\n            4: { data: artists[4], type: 'artist' },\r\n        }\r\n\r\n        //adding related artists\r\n        let relatedArtists = {}\r\n        for (let i = 0; i < 5; i++) {\r\n            let id = preferences[i].data.id;\r\n            let response = await axios.get(`https://api.spotify.com/v1/artists/${id}/related-artists`, {\r\n                headers: {\r\n                    'Authorization': \"Bearer \" + this.props.token,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            let artists = response.data.artists;\r\n            relatedArtists[i] = artists;\r\n        }\r\n\r\n        this.setState({ artists, preferences, relatedArtists });\r\n        await this.callForRecommend();\r\n        return;\r\n    }\r\n\r\n    callForRecommend = async () => {\r\n        const { preferences, select, tracks, sortByNew } = this.state;\r\n\r\n        let copyTracks = [];\r\n        select.forEach((val, i) => {\r\n            if (select[i]) {\r\n                copyTracks.push(tracks[i]);\r\n            }\r\n        });\r\n\r\n        let selectArr = new Array(50).fill(false);\r\n        for (let i = 0; i < copyTracks.length; i++) {\r\n            selectArr[i] = true;\r\n        }\r\n\r\n        let tracksLeft = 50 - copyTracks.length;\r\n        if (tracksLeft === 0) return;\r\n\r\n        let seedBase = `limit=${!sortByNew ? 50 : 85}&`;\r\n        let seedArtist = 'seed_artists=';\r\n        let seedTrack = 'seed_tracks=';\r\n        let changed = false;\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            if (preferences[i].data != null) {\r\n                changed = true;\r\n                if (preferences[i].type === \"artist\") {\r\n                    seedArtist += preferences[i].data.id;\r\n\r\n                    if (i <= 3) seedArtist += ',';\r\n\r\n                } else if (preferences[i].type === \"track\") {\r\n                    seedTrack += preferences[i].data.id;\r\n\r\n                    if (i <= 3) seedTrack += ',';\r\n                }\r\n            }\r\n        }\r\n\r\n        if (seedArtist !== 'seed_artists=') {\r\n            seedBase += seedArtist;\r\n        }\r\n\r\n        if (seedTrack !== 'seed_tracks=') {\r\n            seedBase += \"&\";\r\n            seedBase += seedTrack;\r\n        }\r\n\r\n        let recRequestURL = SEED_URI + seedBase;\r\n        if (!changed) {\r\n            recRequestURL = `https://api.spotify.com/v1/recommendations?limit=${tracksLeft}&seed_genres=pop`\r\n        }\r\n\r\n        const seed_response = await axios.get(recRequestURL, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        let artistNames = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            artistNames.push(preferences[i].data.name);\r\n        }\r\n\r\n        seed_response.data.tracks.sort((a, b) => b.popularity - a.popularity);\r\n\r\n        for (let i = 0; i < tracksLeft; i++) {\r\n            let track = seed_response.data.tracks[i];\r\n            if (!copyTracks.some(t => t.name.localeCompare(track.name) === 0)) {\r\n                copyTracks.push(track);\r\n            }\r\n            if (sortByNew) {\r\n                if (artistNames.indexOf(track.artists[0].name) < 0) {\r\n                    copyTracks.push(track);\r\n                }\r\n            }\r\n        }\r\n\r\n        let sortByNewTracks = [...seed_response.data.tracks].sort((a, b) => {\r\n            if (artistNames.indexOf(a.artists[0].name) < 0 && artistNames.indexOf(b.artists[0].name) < 0) {\r\n                return a.popularity > b.popularity ? -1 : 1;\r\n            }\r\n            if (artistNames.indexOf(a.artists[0].name) >= 0 && artistNames.indexOf(b.artists[0].name) >= 0) {\r\n                return a.popularity > b.popularity ? -1 : 1;\r\n            }\r\n            if (artistNames.indexOf(a.artists[0].name) >= 0) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        });\r\n\r\n        let tracklisturi = copyTracks.map(t => t.uri);\r\n        this.setState({ tracks: copyTracks, select: selectArr, tracklisturi, newartisttracks: sortByNewTracks });\r\n    }\r\n\r\n    updateSelectedTrack = (track) => {\r\n        this.setState({ selectedTrack: track });\r\n    }\r\n\r\n    updateSearchSeed = (seedStr) => {\r\n        this.setState({ searchSeed: seedStr });\r\n    }\r\n\r\n    updateHoveredObj = (e, index) => {\r\n        if (!e) {\r\n            this.setState({ hovering: null, sample_uri: null, hoverIndex: null });\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        let objData = {\r\n            sample_uri: e.currentTarget.dataset.sampleUri,\r\n            img: e.currentTarget.children[0].children[1].currentSrc,\r\n            trackName: e.currentTarget.children[0].children[2].children[0].textContent,\r\n            artistName: e.currentTarget.children[0].children[2].children[1].textContent,\r\n        }\r\n        \r\n        this.setState({ hovering: objData, sample_uri: objData.sample_uri, hoverIndex: index });\r\n    }\r\n\r\n    updateTimeRange = async (time_range) => {\r\n        const { type, limit } = this.state;\r\n        const response = await axios.get(`https://api.spotify.com/v1/me/top/${type}?time_range=${time_range}&limit=${limit}&offset=0`, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const artists = response.data.items;\r\n\r\n        const preferences = {\r\n            0: { data: artists[0], type: 'artist' },\r\n            1: { data: artists[1], type: 'artist' },\r\n            2: { data: artists[2], type: 'artist' },\r\n            3: { data: artists[3], type: 'artist' },\r\n            4: { data: artists[4], type: 'artist' },\r\n        }\r\n\r\n        this.setState({ artists, time_range, preferences });\r\n        this.callForRecommend();\r\n    }\r\n\r\n    updateHoverUri = (sample_uri) => {\r\n        this.setState({ sample_uri });\r\n    }\r\n\r\n    updatePreference = async (preferenceObject, type) => {\r\n        if (this.state.changingPreferenceIndex === null) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            if (preferenceObject.name === this.state.preferences[i].data.name) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let indexToReplace = this.state.changingPreferenceIndex;\r\n        let preferences = { ...this.state.preferences };\r\n        preferences[indexToReplace] = { data: preferenceObject, type }\r\n\r\n        let response = await axios.get(`https://api.spotify.com/v1/artists/${preferenceObject.id}/related-artists`, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        let currentRelatedArtists = response.data.artists;\r\n        let relatedArtists = { ...this.state.relatedArtists, [this.state.changingPreferenceIndex]: currentRelatedArtists }\r\n\r\n        this.setState(st => ({ preferences, relatedArtists, currentRelatedArtists }));\r\n        this.callForRecommend();\r\n    }\r\n\r\n    setupPreference = (index) => {\r\n        let { changingPreferenceIndex, relatedArtists } = this.state;\r\n\r\n        if (index === changingPreferenceIndex) {\r\n            return;\r\n        }\r\n\r\n        let currentRelatedArtists = relatedArtists[index];\r\n        this.setState({ changingPreferenceIndex: index, currentRelatedArtists });\r\n    }\r\n\r\n    playSpecificArtist = (uri, artistName) => {\r\n        axios.put('https://api.spotify.com/v1/me/player/play', \r\n        { \"context_uri\": uri} , {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        this.setState({ currentPlaying: artistName });\r\n    }\r\n\r\n    playSpecificSong = (uri, songname) => {\r\n        axios.put('https://api.spotify.com/v1/me/player/play', { \"uris\": [uri] }, {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        this.setState({ currentPlaying: songname });\r\n    }\r\n\r\n    queueUpSongs = () => {\r\n        axios.put('https://api.spotify.com/v1/me/player/play', \r\n        { \"uris\": this.state.tracklisturi, \"offset\": { \"position\": 0 } } , {\r\n            headers: {\r\n                'Authorization': \"Bearer \" + this.props.token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    lockSpecificTrack = (index) => {\r\n        let selectCopy = [...this.state.select];\r\n        selectCopy[index] = !selectCopy[index];\r\n\r\n        this.setState({ select: selectCopy });\r\n    }\r\n\r\n    updateMenu = () => {\r\n        this.setState(st => ({ openingMenu: !st.openingMenu }))\r\n    }\r\n\r\n    updateSortByNew = () => {\r\n        this.setState(st => ({ sortByNew: !st.sortByNew }));\r\n    }\r\n\r\n    render() {\r\n        const { token, deviceId, changePlayerSettings } = this.props;\r\n        const { tracks, newartisttracks, hovering, preferences, sample_uri, changingPreferenceIndex,\r\n            select, hoverIndex, currentPlaying, sortByNew, tracklisturi, openingMenu, showThumb, updateSortByNew, currentRelatedArtists, relatedArtists } = this.state;\r\n\r\n        return (\r\n            <div className=\"app-container\">\r\n                <div className=\"darken\" \r\n                    style={{ background: openingMenu ? '' : 'rgba(0, 0, 0, 0.8)',\r\n                    zIndex: openingMenu ? -1 : 3 }}\r\n                    onClick={e => this.setState({openingMenu: true })} />\r\n                {/* <button onClick={e => this.setState({ openingMenu: true })}></button> */}\r\n                <ChosenPreferences\r\n                    preferences={preferences}\r\n                    changingPreferenceIndex={changingPreferenceIndex}\r\n                    updateMenu={this.updateMenu}\r\n                    setupPreference={this.setupPreference}\r\n                    updatePreference={this.updatePreference}\r\n                    playSpecificArtist={this.playSpecificArtist}\r\n                    currentRelatedArtists={currentRelatedArtists}\r\n                    relatedArtists={relatedArtists}\r\n                    token={token}\r\n                    openingMenu={openingMenu}\r\n                />\r\n                {!openingMenu ? \r\n                    <Thumbnail\r\n                        select={select}\r\n                        sortByNew={sortByNew}\r\n                        token={token}\r\n                        changePlayerSettings={changePlayerSettings}\r\n                        updateMenu={this.updateMenu}\r\n                        lockSpecificTrack={this.lockSpecificTrack}\r\n                        updateTimeRange={this.updateTimeRange}\r\n                        updateHoveredObj={this.updateHoveredObj}\r\n                        updateSelectedTrack={this.updateSelectedTrack}\r\n                        playSpecificSong={this.playSpecificSong}\r\n                        updatePreference={this.updatePreference}\r\n                        callForRecommend={this.callForRecommend}\r\n                        queueUpSongs={this.queueUpSongs}\r\n                        updateSortByNew={this.updateSortByNew}\r\n                        tracks={tracks}\r\n                        newartisttracks={newartisttracks}\r\n                        deviceId={deviceId}\r\n                        hovering={hovering}\r\n                        hoverIndex={hoverIndex}\r\n                        sampleUri={sample_uri}\r\n                        tracklisturi={tracklisturi}\r\n                    />\r\n                : null }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport '../css/CurrentTrack.css';\r\n\r\nexport default class CurrentTrack extends Component {\r\n\r\n    millisToMinutesAndSeconds = (millis) => {\r\n        var minutes = Math.floor(millis / 60000);\r\n        var seconds = Math.floor(Math.floor(millis % 60000) / 1000);\r\n        let ret = minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n        return ret;\r\n    }\r\n\r\n    render() {\r\n        const { changePlayerSettings, changeCurrentTrackTime, changeCurrentVolume, pauseTimer, restartTimer, curTrack, curVolume, playing, trackTimer } = this.props;\r\n\r\n        return (\r\n            curTrack ?\r\n                <div className=\"cur-track-container\">\r\n                    <div className=\"top-container\">\r\n                        <div className=\"cur-track-img-container\">\r\n                            <img className=\"cur-track-img\" src={curTrack.track_window.current_track.album.images[0].url} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"cur-track-name\"> {curTrack.track_window.current_track.name} </div>\r\n                        <div className=\"cur-artist-name\"> {curTrack.track_window.current_track.artists[0].name}</div>\r\n                    </div>\r\n                    <div className=\"button-bar\">\r\n                        <div className=\"control-btn prev-track fa-2x\" onClick={() => changePlayerSettings('prev')} />\r\n                        <button className=\"control-btn toggle-button\" onClick={() => changePlayerSettings('toggle')}>\r\n                            {playing ?\r\n                                <div onClick={_ => pauseTimer()} className=\"cur-pause\" aria-hidden=\"true\" /> :\r\n                                <div onClick={_ => restartTimer()} className=\"cur-play\" aria-hidden=\"true\" />}\r\n                        </button>\r\n                        <div className=\"control-btn next-track\" onClick={() => changePlayerSettings('next')} />\r\n                    </div>\r\n                    <div className=\"song-slider\">\r\n                        <span className=\"song-start-time\"> {this.millisToMinutesAndSeconds(trackTimer)} </span>\r\n                        <input onChange={(e) => { e.preventDefault(); changeCurrentTrackTime(e.target.value) }} type=\"range\" className=\"slider\" min=\"0\" max={`${curTrack.duration}`} step=\"1000\" value={`${trackTimer}`}></input>\r\n                        <span className=\"song-end-time\"> {this.millisToMinutesAndSeconds(curTrack.duration)} </span>\r\n                    </div>\r\n                    <div className=\"volume-slider\">\r\n                        <span className=\"song-star\" />\r\n                        <input onChange={(e) => { e.preventDefault(); changeCurrentVolume(e.target.value) }} type=\"range\" className=\"vol-slider\" min=\"0\" max=\"1\" step=\"0.025\" value={`${curVolume}`}></input>\r\n                        <span className=\"song-end-time\"> {this.millisToMinutesAndSeconds(curTrack.duration)} </span>\r\n                    </div>\r\n                </div > : <div></div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Navbar.css';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='navbar-container'>\r\n                <div className=\"logo-name\"> SPOTLUCK </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport queryString from 'query-string';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../css/App.css';\r\n\r\nimport Success from './Success';\r\nimport CurrentTrack from '../Components/CurrentTrack';\r\nimport Navbar from '../Components/Navbar';\r\n\r\nexport default class Landing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            readyToRedirect: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const search = window.location.hash;\r\n        const hash = queryString.parse(search).access_token;\r\n\r\n        if (hash) {\r\n            await this.props.validateLogin(true, hash);\r\n        } else if (window.location.search === '?error=access_denied') {\r\n            this.setState({ readyToRedirect: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { token, deviceId, changePlayerSettings, pauseTimer, restartTimer, curTrack, curVolume, changeCurrentTrackTime, changeCurrentVolume, playing, trackTimer } = this.props;\r\n        const { readyToRedirect } = this.state;\r\n\r\n        if (readyToRedirect) {\r\n            this.setState({ readyToRedirect: false})\r\n            return <Redirect to={'/'}/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"root-container\">\r\n                <Navbar />\r\n                <Success changePlayerSettings={changePlayerSettings} deviceId={deviceId} token={token}/>\r\n                <CurrentTrack changeCurrentTrackTime={changeCurrentTrackTime}\r\n                 changeCurrentVolume={changeCurrentVolume} \r\n                 playing={playing} curTrack={curTrack} \r\n                 curVolume={curVolume} trackTimer={trackTimer} \r\n                 changePlayerSettings={changePlayerSettings} \r\n                 pauseTimer={pauseTimer}\r\n                 restartTimer={restartTimer} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Agreement.css';\r\n\r\nexport default class Agreement extends Component {\r\n    render() {\r\n\r\n        const client_id = \"10bb0e9003e748e684be1160d29f3562\"\r\n        const scopes = \"streaming user-read-email user-read-private user-top-read user-modify-playback-state\";\r\n\r\n        return (\r\n            <div className=\"agreement-container\">\r\n                <div className=\"sliding-background\"></div>\r\n                <div className=\"agreement-header\">\r\n                    <div className=\"agreement-modal\">\r\n                        <div className=\"agreement-description\">\r\n                            <h3 className=\"agreement-title\"> Spotluck </h3>\r\n                            <div className=\"app-description\"> A new way to discover music. Powered by you. </div>\r\n                        </div>\r\n                        <div className=\"agreement-button\">\r\n                            <a\r\n                                className=\"agreement-link\"\r\n                                href={\"https://accounts.spotify.com/authorize\" +\r\n                                    `?client_id=${client_id}` +\r\n                                    \"&response_type=token\" +\r\n                                    \"&redirect_uri=https://serene-hollows-75057.herokuapp.com/landing\" +\r\n                                    // \"&redirect_uri=http://localhost:3000/landing\" +\r\n                                    `&scope=${scopes ? encodeURIComponent(scopes) : ''}`}>\r\n                                Login with Spotify\r\n                    </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"spotluck-preview\">\r\n                        <div className=\"preview-div\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../css/App.css';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Landing from '../Components/Landing';\r\nimport Agreement from '../Components/Agreement';\r\n\r\nexport default class App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n      token: null,\r\n      deviceId: \"\",\r\n      position: 0,\r\n      duration: 0,\r\n      playing: true,\r\n      premium: true,\r\n      redirect: false, // BACKBURNER: figure out how to redirect when the user clicks cancel\r\n      curTrack: null,\r\n      trackTimer: 0, \r\n      currentTimer: null, \r\n      curVolume: 0.05\r\n    }\r\n    this.playerCheckInterval = null;\r\n  }\r\n\r\n  checkPlayerInterval = () => {\r\n    if (this.state.token != null) {\r\n      this.setState({ loggedIn: true });\r\n      this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 1000);\r\n    }\r\n  }\r\n\r\n  transferPlaybackHere() {\r\n    const { deviceId, token } = this.state;\r\n    fetch(\"https://api.spotify.com/v1/me/player\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        \"device_ids\": [deviceId],\r\n        \"play\": true,\r\n      }),\r\n    });\r\n  }\r\n\r\n  checkForPlayer = () => {\r\n    const { token, curTrack } = this.state;\r\n\r\n    if (window.Spotify !== null) {\r\n      clearInterval(this.playerCheckInterval);\r\n      this.player = new window.Spotify.Player({\r\n        name: \"Daniel Web Spotify Player\",\r\n        getOAuthToken: cb => { cb(token); },\r\n        volume: 0.3\r\n      });\r\n\r\n      this.player.on('initialization_error', e => { console.error(e); });\r\n      this.player.on('authentication_error', e => {\r\n        this.setState({ loggedIn: false });\r\n\r\n      });\r\n      this.player.on('account_error', e => { console.error(e); });\r\n      this.player.on('playback_error', e => { console.error(e); });\r\n\r\n      // Playback status updates\r\n      this.player.on('player_state_changed', state => {\r\n        console.log('state changed')\r\n        console.log(this.state.curTrack)\r\n        if (this.state.curTrack) {\r\n          if (this.state.curTrack.duration !== state.duration) {\r\n            this.newSong();\r\n          }\r\n        }\r\n        this.setState({ curTrack: state })\r\n      });\r\n\r\n      // Ready\r\n      this.player.on('ready', async data => {\r\n        let { device_id } = data;\r\n        console.log(\"Let the music play on!\");\r\n        this.player.setVolume(this.state.curVolume);\r\n        await this.setState({ deviceId: device_id, premium: true });\r\n        this.transferPlaybackHere();\r\n      });\r\n\r\n      // Connect to the player!\r\n      this.player.connect().then(success => {\r\n        if (success) {\r\n          this.changeCurrentTrackTime(0);\r\n          this.transferPlaybackHere();\r\n          console.log(\"The Web Player successfully connected to Spotify!\")\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  changePlayerSettings = async (control) => {\r\n    switch (control) {\r\n      case ('pause'):\r\n        this.setState({ playing: false })\r\n        this.player.pause();\r\n        break;\r\n      case ('toggle'):\r\n        this.setState(st => ({ playing: !st.playing }))\r\n        this.player.togglePlay();\r\n        break;\r\n      case ('next'):\r\n        this.player.nextTrack();\r\n        this.newSong();\r\n        break;\r\n      case ('previous'):\r\n        this.player.previousTrack();\r\n        this.newSong();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  newSong = async () => {\r\n    await clearInterval(this.state.currentTimer);\r\n    this.startTimer(0);\r\n  }\r\n\r\n  pauseTimer = async () => {\r\n    let timer = this.state.currentTimer;\r\n    await clearInterval(timer);\r\n  }\r\n\r\n  restartTimer = async () => {\r\n    let timer = setInterval(e => {\r\n      this.setState(st => ({ trackTimer: st.trackTimer + 1000 }))\r\n    }, 1000);\r\n\r\n    this.setState({ currentTimer: timer });\r\n  }\r\n\r\n  startTimer = (start) => {\r\n    this.setState({ trackTimer: +start })\r\n    let timer = setInterval(e => {\r\n      this.setState(st => ({ trackTimer: st.trackTimer + 1000 }))\r\n    }, 1000);\r\n\r\n    this.setState({ currentTimer: timer });\r\n  }\r\n\r\n  changeCurrentTrackTime = (time) => {\r\n    if (this.state.trackTimer == 0) {\r\n      this.startTimer(time);\r\n      this.player.seek(time);\r\n    } else {\r\n      this.setState({ trackTimer: +time })\r\n      this.player.seek(time);\r\n    }\r\n  }\r\n  \r\n  changeCurrentVolume = (volume) => {\r\n    this.setState({ curVolume: volume })\r\n    this.player.setVolume(volume)\r\n  }\r\n\r\n  getPlayerState = async () => {\r\n    return this.player.getCurrentState;\r\n  }\r\n\r\n  validateLogIn = async (validated, token) => {\r\n    if (validated) {\r\n      await this.setState({ token });\r\n      this.checkPlayerInterval();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, redirect, token, deviceId, curTrack, curVolume, playing, trackTimer } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/landing' render={props => \r\n            <Landing {...props} \r\n                    changeCurrentTrackTime={this.changeCurrentTrackTime}\r\n                    changeCurrentVolume={this.changeCurrentVolume}\r\n                    pauseTimer={this.pauseTimer}\r\n                    restartTimer={this.restartTimer}\r\n                    curTrack={curTrack} \r\n                    curVolume={curVolume}\r\n                    playing={playing} \r\n                    changePlayerSettings={this.changePlayerSettings} \r\n                    deviceId={deviceId} token={token} \r\n                    redirect={redirect} \r\n                    loggedIn={loggedIn} \r\n                    validateLogin={this.validateLogIn} \r\n                    trackTimer={trackTimer}\r\n                    /> } />\r\n          <Route exact path='/' render={props => <Agreement {...props} />} />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}